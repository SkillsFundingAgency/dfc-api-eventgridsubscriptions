resources:
  repositories:
  - repository: self
  - repository: dfc-devops
    type: github
    name: SkillsFundingAgency/dfc-devops
    ref: refs/tags/v1.11.2
    endpoint: 'GitHub (ESFA)'

pool:
  name: NCS - CI and CD
  demands:
  - msbuild
  - visualstudio

trigger: 
  branches:
    include: 
    - dev

pr:
  branches:
    include: 
    - dev

stages:
- stage: Build
  jobs:

  - job: BuildArmTemplates
    displayName: "Build and test ARM template"
    workspace:
      clean: all
    pool: 'NCS - CI and CD'
    steps:
    - template: /AzureDevOpsTemplates/Build/StepTemplates/dfc-arm-build.yml@dfc-devops
      parameters:
        ArmTemplateRoot: "$(System.DefaultWorkingDirectory)/Resources/ArmTemplates"
        SolutionBaseName: 'DFC.Api.EventGridSubscriptions'

    - task: CopyFiles@2
      displayName: 'Copy PSScripts Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: 'PSScripts/**/*.ps1'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/Resources/PSScripts'
        flattenFolders: true

    - task: PublishPipelineArtifact@0
      displayName: Publish PSScripts Pipeline Artifact
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)/Resources/PSScripts
        artifactName: DFC.Api.EventGridSubscriptions.PSScripts

    - task: PublishPipelineArtifact@1
      displayName: Publish OpenAPI docs to Pipeline Artifact
      inputs:
        targetPath: "$(System.DefaultWorkingDirectory)/DFC.EventGridSubscriptions.ApiFunction/OpenAPIDocs"
        artifactName: DFC.Api.EventGridSubscriptions.Resources.OpenAPIDocs

    - task: PublishPipelineArtifact@1
      displayName: Publish apim policies
      inputs:
        targetPath: "$(System.DefaultWorkingDirectory)/Resources/ApimPolicy"
        artifactName: DFC.Api.EventGridSubscriptions.Resources.ApimPolicies

  #Build and test the application
  - job: BuildTestAndAnalyze
    displayName: "Build and test application"
    pool:
      name: NCS - CI and CD
      demands:
      - msbuild
      - visualstudio
    steps:
    - template: AzureDevOpsTemplates\Build\StepTemplates\dfc-dotnetcore-build-sonar.yml@dfc-devops
      parameters:
        SolutionBaseName: 'DFC.EventGridSubscriptions.ApiFunction'
        BuildPlatform: 'any cpu'
        BuildConfiguration: 'release'
        PublishWebApp: true
        TestSuffix: 'Tests'
        DotNetCoreVersion: '3.1.100'

- stage: DeployToDevEventGridSubscriptions
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  displayName: Deploy to DEV_EventGridSubscriptions
  variables:
  - group: dfc-shared-all
  - group: dfc-api-eventgridsubscriptions-dev
  - group: dfc-shared-dev
  - group: dfc-app-shared-all
  - group: dfc-app-shared-dev
  - template: VariableTemplates\DevEnvironmentVariables.yml
  - name: WebAppPrefix
    value: dfc-dev
  jobs:
  - template: JobTemplates/deploy-environment.yml
    parameters:
      AzureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      EnvironmentTag: '$(EnvironmentTag)'
      ParentBusiness: '$(ParentBusiness)'
      ServiceOffering: '$(ServiceOffering)'
      ResourceGroup: 'dfc-dev-api-eventgridsubscriptions-rg'
      PackageFile:  "$(Pipeline.Workspace)/DFC.Api.EventGridSubscriptions.DeploymentPackages/DFC.EventGridSubscriptions.ApiFunction.zip"
      ApimPoliciesPath:  "$(Pipeline.Workspace)/DFC.Api.EventGridSubscriptions.Resources.ApimPolicies"
      ApimProductId: 'EventGridSubscriptions'
      ApimLoggerName: 'EventGridSubscriptions-logger'
      APIProductInstanceName: 'EventGridSubscriptions'
      ArmTemplateFolder: "$(Pipeline.Workspace)/DFC.Api.EventGridSubscriptions.Resources.ArmTemplates/"
      ApimImportScript: "$(Pipeline.Workspace)/DFC.Api.EventGridSubscriptions.Resources.Scripts/Import-ApimOpenApiDefinitionFromFile.ps1"
      SpecificationPath: "$(Pipeline.Workspace)/DFC.Api.EventGridSubscriptions.Resources.OpenApiDocs"
      SharedResourceGroup: 'dfc-dev-shared-rg'
      ApimServiceName: 'dfc-dev-shared-apim'
      FunctionAppDomain: '$(FunctionAppDomain)'
      FunctionAppName: 'dfc-dev-api-eventgridsubscriptions-fa'
      EnvironmentName: DEV_EventGridSubscriptions
      DFCAzureDevOpsProjectGuid: $(DFCAzureDevOpsProjectGuid)
      # The Apis parameter requires a complex object be passed in,  which requires some odd looking yaml.
      # The top level -`s here defines an array of "something"
      # The inner level -'s defines an array of mappings.
      Apis: 
        -
          - name: Subscription
            azureFunctionName: '${{ variables.WebAppPrefix }}-api-eventgridsubscriptions-fa'
    
  - job: CreateServicePrincipal
    steps:
    - task: AzurePowerShell@5
      displayName: 'Azure PowerShell script: Creation of Service Principal'
      inputs:
        azureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
        ScriptPath: '$(System.DefaultWorkingDirectory)/_dfc-api-eventgridsubscriptions/DFC.Api.EventGridSubscriptions.PSScripts/New-ServicePrincipalAndStoreSecrets.ps1'
        ScriptArguments: '-ResourcePrefix dfc-dev-api-eventgridsubscriptions -RepoName dfc-api-eventgridsubscriptions -KeyVaultName dfc-dev-shared-kv -TenantId $(Authentication_Tenant)  -Verbose'
        azurePowerShellVersion: LatestVersion

  - job: SetKeyvaultPermissions
    steps:
    - task: AzurePowerShell@5
      displayName: 'Azure PowerShell script: Keyvault permissions'
      inputs:
        azureSubscription: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
        ScriptPath: '$(System.DefaultWorkingDirectory)/_dfc-api-eventgridsubscriptions/DFC.Api.EventGridSubscriptions.PSScripts/Assign-KeyVault-Permissions-To-Identity.ps1'
        ScriptArguments: ' -KeyVaultName  dfc-dev-shared-kv -ResourceGroupName dfc-dev-shared-rg -ServicePrincipalName dfc-dev-api-eventgridsubscriptions-fa -Verbose'
        azurePowerShellVersion: LatestVersion
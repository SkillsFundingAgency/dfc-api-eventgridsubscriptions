{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Environment": {
            "type": "string"
        },
        "appSharedResourceGroup": {
            "type": "string"
        },
        "sharedAppServicePlanName": {
            "type": "string",
            "defaultValue": ""
        },
        "sharedAppServicePlanResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "appSharedStorageAccountName": {
            "type": "string"
        },
        "aspInstances": {
            "type": "int"
        },
        "aspTier": {
            "type": "string"
        },
        "aspSize": {
            "type": "string"
        },
        "aseHostingEnvironmentName": {
            "type": "string"
        },
        "aseResourceGroup": {
            "type": "string"
        },
        "SharedKeyVaultName": {
            "type": "string",
            "defaultValue": ""
        },
        "EventGridResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "EventGridTopicName": {
            "type": "string",
            "defaultValue": ""
        },
        "cosmosDbName": {
            "type": "string"
        },
        "cosmosDbKey": {
            "type": "securestring"
        }
    },
    "variables": {
        "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
        "appServicePlanResourceGroup": "[concat(variables('resourcePrefix'),'-rg')]",
        "BuildingBlocksDfcBaseUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "ResourcePrefix": "[tolower(concat('dfc-', parameters('Environment'), '-api-eventgridsubscriptions'))]", 
        "AppServiceAppInsightsName": "[concat(variables('ResourcePrefix'), '-ai')]",
        "FunctionAppName": "[concat(variables('ResourcePrefix'), '-fa')]",
        "cosmosDbCollectionPartitionKey": "/PartitionKey",
        "cosmosDbDatabaseName": "dfc-eventstore",
        "cosmosDbEndpoint": "[concat('https://', parameters('cosmosDbName'), '.documents.azure.com:443/')]"

    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "collections",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('appSharedResourceGroup')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'CosmosDb/cosmos-collection.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[parameters('cosmosDbName')]"
                    },
                    "databaseName": {
                        "value": "[variables('cosmosDbDatabaseName')]"
                    },
                    "collectionName": {
                        "value": "subscriptions"
                    },
                    "provisionRequestUnits": {
                        "value": false
                    },
                    "partitionKey": {
                        "value": "[variables('cosmosDbCollectionPartitionKey')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('AppServiceAppInsightsName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('AppServiceAppInsightsName')]"
                    },
                    "attachedService": {
                        "value": ""
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('buildingBlocksDfcBaseUrl'), 'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aseHostingEnvironmentName": {
                        "value": "[parameters('aseHostingEnvironmentName')]"
                    },
                    "aseResourceGroup": {
                        "value": "[parameters('aseResourceGroup')]"
                    },
                    "aspSize": {
                        "value": "[parameters('aspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('aspInstances')]"
                    },
                    "nonASETier": {
                        "value": "[parameters('aspTier')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[variables('FunctionAppName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('BuildingBlocksDfcBaseUrl'), 'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('functionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('appServicePlanResourceGroup')]"
                    },
                    "appServiceType": {
                        "value": "functionapp"
                    },
                    "deployStagingSlot": {
                        "value": true
                    },
                    "clientAffinity": {
                        "value": true
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "FUNCTIONS_EXTENSION_VERSION",
                                "value": "~3"
                            },
                            {
                                "name": "FUNCTIONS_WORKER_RUNTIME",
                                "value": "dotnet"
                            },
                            {
                                "name": "MSDEPLOY_RENAME_LOCKED_FILES",
                                "value": "1"
                            },
                            {
                                "name": "WEBSITE_RUN_FROM_PACKAGE",
                                "value": "1"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(variables('AppServiceAppInsightsName')).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('appSharedStorageAccountName'),';AccountKey=',listKeys(resourceId(parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
                            },
                            {
                                "name": "Logging__ApplicationInsights__LogLevel__Default",
                                "value": "Information"
                            },
                            {
                                "name": "appregistration__id",
                                "value": "dfc-api-eventgridsubscriptions-appregistration-id"
                            },
                            {
                                "name": "appregistration__secret",
                                "value": "dfc-api-eventgridsubscriptions-appregistration-secret"
                            },
                            {
                                "name": "appregistration__tenantid",
                                "value": "dfc-api-eventgridsubscriptions-appregistration-tenant-id"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__SubscriptionId",
                                "value": "[subscription().subscriptionId]"
                            },
                            {
                                "name": "keyvault_name",
                                "value": "[parameters('SharedKeyVaultName')]"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__ResourceGroup",
                                "value": "[parameters('EventGridResourceGroup')]"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__TopicName",
                                "value": "[parameters('EventGridTopicName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__EventGridSubscriptions__AccessKey",
                                "value": "[parameters('cosmosDbKey')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__EventGridSubscriptions__EndpointUrl",
                                "value": "[variables('cosmosDbEndpoint')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__EventGridSubscriptions__DatabaseId",
                                "value": "[variables('cosmosDbDatabaseName')]"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__EventGridSubscriptions__CollectionId",
                                "value": "subscriptions"
                            },
                            {
                                "name": "Configuration__CosmosDbConnections__EventGridSubscriptions__PartitionKey",
                                "value": "[variables('cosmosDbCollectionPartitionKey')]"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__RetryPolicyEventTimeToLiveInMinutes",
                                "value": "1440"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__RetryPolicyMaxDeliveryAttempts",
                                "value": "30"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__DeadLetterBlobContainerName",
                                "value": "event-grid-dead-letter-events"
                            },
							{
                                "name": "EventGridSubscriptionClientOptions__DeadLetterStaleSubscriptionRemovalEnabled",
                                "value": "false"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__DeadLetterBlobResourceId",
                                "value": "[resourceId(subscription().subscriptionId, parameters('appSharedResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('appSharedStorageAccountName'))]"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__StaleSubscriptionInterval",
                                "value": "01:00:00"
                            },
                            {
                                "name": "EventGridSubscriptionClientOptions__StaleSubscriptionThreshold",
                                "value": "1"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[variables('appServicePlanName')]",
                "[variables('AppServiceAppInsightsName')]"
            ]
        }
    ],
    "outputs": {}
}
